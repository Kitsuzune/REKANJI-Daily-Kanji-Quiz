<% if @question %>
  <div class="max-w-4xl mx-auto px-4">
    <div class="bg-white rounded-xl shadow-lg overflow-hidden">
      <!-- Header -->
      <div class="bg-indigo-600 text-white text-center py-4 md:py-6">
        <h4 class="text-xl md:text-2xl font-bold flex flex-col sm:flex-row items-center justify-center space-y-2 sm:space-y-0 sm:space-x-4">
          <span class="inline-flex px-3 py-1 md:px-4 md:py-2 rounded-full text-xs md:text-sm font-medium <%= @exam_attempt.level == 'N5' ? 'bg-green-500' : @exam_attempt.level == 'N4' ? 'bg-yellow-500' : 'bg-red-500' %>">
            <%= @exam_attempt.level %>
          </span>
          <span><%= @exam_attempt.exam_mode.capitalize %> Exam</span>
        </h4>
      </div>

      <!-- Progress Bar -->
      <div class="bg-indigo-500 text-white px-4 py-3">
        <div class="flex justify-between items-center mb-2">
          <span class="text-sm font-medium">Question <%= @current_question_index %> of <%= @total_questions %></span>
          <span class="text-sm" id="timer">
            <span id="minutes">25</span>:<span id="seconds">00</span>
          </span>
        </div>
        <div class="w-full bg-white bg-opacity-20 rounded-full h-2">
          <div class="bg-white h-2 rounded-full transition-all duration-300" 
               style="width: <%= (@current_question_index.to_f / @total_questions * 100).round(2) %>%"></div>
        </div>
      </div>

      <!-- Question Content -->
      <div class="p-4 md:p-8">
        <div class="text-center mb-6 md:mb-8">
          <!-- Question display based on question type -->
          <% case @question[:type] %>
          <% when 'kanji_to_meaning' %>
            <div class="text-6xl md:text-8xl font-bold text-gray-800 mb-3 md:mb-4 kanji-character"><%= @question[:kanji].kanji %></div>
            <p class="text-lg md:text-2xl text-gray-700 mb-2">What does this kanji mean?</p>
            <% if @exam_attempt.exam_mode != 'dedicated' %>
              <p class="text-base md:text-lg text-gray-500">Reading: <%= @question[:kanji].display_reading %></p>
            <% end %>
          
          <% when 'kanji_to_reading' %>
            <div class="text-6xl md:text-8xl font-bold text-gray-800 mb-3 md:mb-4 kanji-character"><%= @question[:kanji].kanji %></div>
            <p class="text-lg md:text-2xl text-gray-700 mb-2">How do you read this kanji?</p>
            <% if @exam_attempt.exam_mode == 'casual' %>
              <p class="text-base md:text-lg text-gray-500">Meaning: <%= @question[:kanji].meaning_id %></p>
            <% end %>
          
          <% when 'meaning_to_kanji' %>
            <div class="bg-blue-50 rounded-xl p-6 md:p-8 mb-4">
              <div class="text-2xl md:text-4xl font-bold text-blue-800 mb-2"><%= @question[:kanji].meaning_id %></div>
            </div>
            <p class="text-lg md:text-2xl text-gray-700 mb-2">Which kanji has this meaning?</p>
            <% if @exam_attempt.exam_mode != 'dedicated' %>
              <p class="text-base md:text-lg text-gray-500">Reading: <%= @question[:kanji].display_reading %></p>
            <% end %>
          
          <% when 'reading_to_kanji' %>
            <div class="bg-purple-50 rounded-xl p-6 md:p-8 mb-4">
              <div class="text-2xl md:text-4xl font-bold text-purple-800 mb-2"><%= @question[:correct_reading] %></div>
            </div>
            <p class="text-lg md:text-2xl text-gray-700 mb-2">Which kanji is read this way?</p>
            <% if @exam_attempt.exam_mode == 'casual' %>
              <p class="text-base md:text-lg text-gray-500">Meaning: <%= @question[:kanji].meaning_id %></p>
            <% end %>
          <% end %>
        </div>
        
        <!-- Answer Options -->
        <%= form_with url: exam_answer_path(@exam_attempt), method: :post, local: true, class: "exam-form" do |form| %>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-3 md:gap-4 mb-6 md:mb-8">
            <% @question[:options].each_with_index do |option, index| %>
              <label class="exam-option cursor-pointer p-4 md:p-6 rounded-lg border-2 border-gray-200 hover:border-indigo-400 hover:bg-indigo-50 transition-all duration-200 transform hover:-translate-y-1 hover:shadow-md">
                <%= form.radio_button :answer, option, 
                    class: "sr-only", 
                    id: "option_#{index}",
                    required: true %>
                <span class="block text-base md:text-lg font-semibold text-center"><%= option %></span>
              </label>
            <% end %>
          </div>
          
          <!-- Submit Button -->
          <div class="text-center">
            <%= form.submit (@current_question_index == @total_questions ? "Finish Exam" : "Next Question"), 
                class: "w-full md:w-auto px-8 py-3 md:py-4 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors font-bold text-lg md:text-xl transform hover:scale-105 shadow-lg" %>
          </div>
        <% end %>
      </div>
    </div>
  </div>

<% else %>
  <div class="max-w-4xl mx-auto px-4">
    <div class="bg-white rounded-xl shadow-lg p-8 text-center">
      <h2 class="text-2xl font-bold text-red-600 mb-4">Invalid Question</h2>
      <p class="text-gray-600 mb-6">There was an error loading this question.</p>
      <%= link_to "Back to Exam List", exam_path, class: "bg-indigo-600 text-white px-6 py-3 rounded-lg hover:bg-indigo-700 transition-colors font-medium" %>
    </div>
  </div>
<% end %>

<!-- Timer JavaScript -->
<script>
let timeRemaining = Math.floor(<%= @time_remaining * 60 %>); // Convert to seconds and round down

function updateTimer() {
  const minutes = Math.floor(timeRemaining / 60);
  const seconds = timeRemaining % 60;
  
  document.getElementById('minutes').textContent = minutes.toString().padStart(2, '0');
  document.getElementById('seconds').textContent = seconds.toString().padStart(2, '0');
  
  if (timeRemaining <= 0) {
    // Time's up - auto submit form
    document.querySelector('.exam-form').submit();
    return;
  }
  
  timeRemaining--;
}

// Update timer every second
setInterval(updateTimer, 1000);
updateTimer(); // Initial call

// Option selection styling
document.addEventListener('DOMContentLoaded', function() {
  const options = document.querySelectorAll('.exam-option');
  
  options.forEach(option => {
    option.addEventListener('click', function() {
      // Remove selected class from all options
      options.forEach(opt => {
        opt.classList.remove('border-indigo-500', 'bg-indigo-50');
        opt.classList.add('border-gray-200');
      });
      
      // Add selected class to clicked option
      this.classList.remove('border-gray-200');
      this.classList.add('border-indigo-500', 'bg-indigo-50');
    });
  });
});
</script>

<style>
.kanji-character {
  font-family: 'Noto Sans CJK JP', serif;
  line-height: 1;
}

.exam-option input[type="radio"]:checked + span {
  color: #4f46e5;
  font-weight: bold;
}

.exam-option:hover {
  transform: translateY(-2px);
}
</style>
